[build-system]
requires = ["setuptools>=64,<81", "wheel", "pybind11>=2.6.0"]
build-backend = "setuptools.build_meta"

[project]
name = "whisperx-nemo-asr"
version = "1.0.8"
description = "Production-ready transcription and diarization pipeline with parallel processing"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
dependencies = [
    # Core Scientific Computing
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "pandas>=2.0.0",
    # Core ML and Audio Processing - Use PyTorch 2.1.2 with CUDA
    "torch==2.5.1",
    "torchaudio==2.5.1",
    "torchvision==0.20.1",
    # Audio and ML libraries
    "faster-whisper>=1.0.0",
    "whisperx==3.4.2",
    # CTC Forced Aligner from GitHub (replaces vendor folder)
    "ctc-forced-aligner @ git+https://github.com/MahmoudAshraf97/ctc-forced-aligner.git",
    # Audio Processing and Source Separation
    # "demucs @ git+https://github.com/adefossez/demucs",
    "demucs @ git+https://github.com/robin-collins/demucs.git",
    "pydub>=0.25.1",
    "librosa>=0.10.0",
    "soundfile>=0.12.1",
    "audioread>=3.0.0",
    # NeMo and Diarization
    "nemo_toolkit==2.2.1",
    "omegaconf>=2.3.0,<2.4.0",
    "hydra-core>=1.3.0,<1.4.0",
    # Punctuation and Text Processing
    "deepmultilingualpunctuation>=1.0.0",
    "nltk>=3.8",
    "regex>=2023.0.0",
    # Transformers and NLP
    "transformers>=4.30.0,<4.50.0",
    "tokenizers>=0.13.0,<0.22.0",
    "huggingface-hub>=0.16.0",
    "datasets>=2.14.0",
    "pyarrow>=10.0.0,<18.0.0",
    # Audio Libraries - Pin pyannote to versions compatible with NumPy 1.x
    "pyannote.audio>=3.1.0,<=3.3.2",
    "pyannote.core>=5.0.0",
    "pyannote.pipeline>=3.0.0",
    # Progress and Utilities
    "tqdm>=4.65.0",
    "requests>=2.31.0",
    "filelock>=3.12.0",
    "fsspec>=2023.6.0",
    # YAML and Configuration
    "PyYAML>=6.0",
    "ruamel.yaml>=0.17.0",
    # Other Core Dependencies
    "packaging>=23.0",
    "matplotlib>=3.7.0",
    "joblib>=1.3.0",
    "scikit-learn>=1.3.0",
    "einops>=0.7.0",
    # Audio Format Support
    "av>=10.0.0",
    "resampy>=0.4.0",
    # Text Processing
    "Unidecode>=1.3.0",
    "inflect>=7.0.0",
    "g2p-en>=2.1.0",
    # Utilities
    "click>=8.0.0",
    "rich>=13.0.0",
    "coloredlogs>=15.0.0",
    "lhotse>=1.30.3",
    "jiwer>=4.0.0",
    "webdataset>=1.0.2",
    "editdistance>=0.8.1",
    "ipython>=9.5.0",
    "pip>=25.2",
]

authors = [
    { name = "Robin Collins", email = "robin.f.collins@outlook.com" },
    { name = "Paul Borie", email = "paul.borie1@gmail.com" }
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://github.com/robin-collins/whisperx-nemo-asr"
Repository = "https://github.com/robin-collins/whisperx-nemo-asr"
Issues = "https://github.com/robin-collins/whisperx-nemo-asr/issues"

[[tool.uv.index]]
url = "https://download.pytorch.org/whl/cu118"
default = true

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

gpu = [
    # GPU-specific packages if needed
    "nvidia-cublas-cu12",
    "nvidia-cuda-cupti-cu12", 
    "nvidia-cuda-nvrtc-cu12",
    "nvidia-cuda-runtime-cu12",
    "nvidia-cudnn-cu12",
    "nvidia-cufft-cu12",
    "nvidia-curand-cu12",
    "nvidia-cusolver-cu12",
    "nvidia-cusparse-cu12",
    "nvidia-nccl-cu12",
]

testing = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "pytest-xdist>=3.0.0",
]

all = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "nvidia-cublas-cu12",
    "nvidia-cuda-cupti-cu12",
    "nvidia-cuda-nvrtc-cu12",
    "nvidia-cuda-runtime-cu12",
    "nvidia-cudnn-cu12",
    "nvidia-cufft-cu12",
    "nvidia-curand-cu12",
    "nvidia-cusolver-cu12",
    "nvidia-cusparse-cu12",
    "nvidia-nccl-cu12",
]

[tool.setuptools]
packages = { find = { include = ["whisperx_nemo_pipeline", "whisperx_nemo_pipeline.*"] } }
include-package-data = true

[tool.setuptools.package-data]
"whisperx_nemo_pipeline" = [
    "nemo_msdd_configs/*.yaml",
]

# UV configuration - fixes the index URL warning
[tool.uv]
index-url = "https://download.pytorch.org/whl/cu118"
extra-index-url = ["https://pypi.org/simple/"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["whisperx_nemo_pipeline"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "nemo.*",
    "whisperx.*",
    "demucs.*",
    "faster_whisper.*",
    "ctc_forced_aligner.*",
    "deepmultilingualpunctuation.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=whisperx_nemo_pipeline",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
    "--strict-config",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks integration tests",
]
